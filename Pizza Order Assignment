/*Pizza parlor accepting maximum M orders. Orders are served in first come first served 
basis. Order once placed cannot be cancelled. Write C++ program to simulate the system 
using circular queue using array*/


#include<iostream>
#define max 20
using namespace std;
typedef struct cq
{
	int f,r;
	int data[max];
}cq;
void initialize(cq*q)
{
	q->f=q->r=-1;
}
int empty(cq*q)
{
	if(q->r==-1)
		return(1);
	return 0;
}
int full(cq*q)
{
	if(q->r==(max-1))
		return(1);
	return 0;
}
void add(cq*q,int x)
{
	if(q->r==-1)
	{
		q->r=q->f=0;
		q->data[q->r]=x;
	}
	else
	{
		q->r=(q->r+1)%max;
		q->data[q->r]=x;
	}
}
void serve(cq*q)
{
	if(empty(q)==0)
	{
		if(q->r==q->f)
		{
			cout<<"\norder served is: "<<q->data[q->f];
		}
		else
		{
			cout<<"\norder served is: "<<q->data[q->f];
			q->f=(q->f+1)%max;
		}
		
	}
	else
		cout<<"\nthere is no order ";
}
void display(cq*q)
{
	if(empty(q)==0)
	{
		for( int i=q->f;i!=q->r;i=(i+1)%max)
		{
			cout<<"\t"<<q->data[i];
		}
		cout<<"\t"<<q->data[q->r];
	}
}
int main()
{
	int n,ch,x;
	cq q1,q2;
	initialize(&q1);
	do
	{
		cout<<"\n\n\t\tmenu\n\t1.add pizza order\n\t2.display the orders\n\t3.serve a pizza\n\t4.exit\n\n\t\tenter choice: ";
		cin>>ch;
		switch(ch)
		{
			case 1:
				cout<<"\nenter no of orders: ";
				cin>>n;
				for(int i=0;i<n;i++)
				{
					cout<<"\nenter order id: ";
					cin>>x;
					if(full(&q1)==0)
						add(&q1,x);
					else
						cout<<"queue is full";
				}
				break;
			case 2:
				display(&q1);
				break;
			case 3:
				serve(&q1);
				break;
			case 4:
				cout<<"\nend of program";
				break;
			default:
				cout<<"\nwrong choice";
				
		}
	}while(ch<5);
	return 0;
}

